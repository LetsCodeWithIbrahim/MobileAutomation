package pages;

import java.time.Duration;
import java.util.Collections;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Pause;
import org.openqa.selenium.interactions.PointerInput;
import org.openqa.selenium.interactions.Sequence;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import io.appium.java_client.AppiumDriver;
import io.appium.java_client.android.AndroidDriver;
public class MyRoutePage {

	AndroidDriver driver;
	WebDriverWait wait;

	public MyRoutePage(AppiumDriver d) {
		driver = (AndroidDriver) d;
		PageFactory.initElements(driver, this);
		this.wait = new WebDriverWait(driver, Duration.ofSeconds(5));
	}

	@FindBy(xpath = "//android.view.ViewGroup[@content-desc='Start Route, ']")
	WebElement startRouteButton;

	@FindBy(xpath = "//android.widget.TextView[@text='Initial Odometer Reading']")
	WebElement inputInitialOdometerReading;

	@FindBy(xpath = "//android.widget.TextView[@text='Submit']")
	WebElement submitInitialOdometerReading;

	@FindBy(xpath = "//android.view.View[@content-desc='']/android.view.ViewGroup")
	WebElement clickOnStartedRoutes;

	@FindBy(xpath = "//android.widget.TextView[@text='Complete Shipment']")
	WebElement clickOnCompleteShipment;

	@FindBy(xpath = "//android.widget.TextView[@text='Yes']")
	WebElement clickOnYesButton;

	@FindBy(xpath = "//android.widget.TextView[@text='Next']")
	WebElement clickOnNextButton;

	@FindBy(xpath = "//android.widget.TextView[@text='Next']")
	WebElement clickOnNextButton2;

	@FindBy(xpath = "(//android.widget.TextView[@text=''])[1]")
	WebElement clickOnFirstFreightCamIcon;

	@FindBy(xpath = "//android.widget.TextView[@text='']")
	WebElement clickToTakePicture;

	@FindBy(xpath = "//android.view.ViewGroup[@content-desc='']")
	WebElement clickToSavePicture;

	@FindBy(xpath = "//android.widget.Button[@content-desc='Crop']")
	WebElement saveCroppedPicture;

	@FindBy(xpath = "(//android.widget.TextView[@text=''])[5]")
	WebElement clickOnTakePodImage;

	@FindBy(xpath = "//android.view.ViewGroup[@content-desc='']")
	WebElement clickToTakeImage;

	@FindBy(xpath = "//android.widget.TextView[@text='']")
	WebElement savePodImage;

	@FindBy(xpath = "//android.widget.Button[@content-desc='Crop']")
	WebElement saveCroppedPodImage;

	@FindBy(xpath = "//android.widget.TextView[@text='Next']")
	WebElement clickOnNextButton3;

	@FindBy(xpath = "//android.view.ViewGroup[@content-desc=\"Signatures, Typed Name Required, First Name, Last Name\"]/android.view.ViewGroup/android.widget.EditText[1]")
	WebElement typeFirstName;

	@FindBy(xpath = "//android.view.ViewGroup[@content-desc='Submit']")
	WebElement clickOnSubmitButton;

	public WebElement getMyRouteInfo(String referenceText) {

		String xpath = String.format("//android.widget.TextView[@text='%s']", referenceText);
		return wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpath)));
	}

	public String getMyRouteInfoText(String referenceText) {
		WebElement element = getMyRouteInfo(referenceText);
		return element.getText(); // Extract the text from the element
	}

	public void verifyMyRouteInfo(String expectedText) {
		// Get the actual text from the mobile element
		String actualText = getMyRouteInfoText(expectedText);

		// Print the value for debugging
		System.out.println("Reference Number Retreived Using Appium: " + actualText);
		System.out.println("Reference Number Retreived Using Cypress: " + expectedText);

		// Perform assertion
		Assert.assertEquals(actualText, expectedText, "The route info text does not match.");
	}

	public void clickStartRouteButton() {

		Assert.assertTrue(startRouteButton.isDisplayed(), "Start Route button is not displayed.");

		startRouteButton.click();
		
		Str
	}
	
//	public void inputOdometerReading(String reading) {
//	    try {
//	        // Wait until the input field is visible within the given time
//	        wait.until(ExpectedConditions.visibilityOf(inputInitialOdometerReading));
//
//	        // Now proceed with the input operation if the element is visible
//	        if (inputInitialOdometerReading.isDisplayed()) {
//	            System.out.println("Odometer input field is visible");
//	            inputInitialOdometerReading.click(); // Click to focus the input
//	            inputInitialOdometerReading.clear(); // Clear existing text if any
//	            inputInitialOdometerReading.sendKeys(reading); // Input the new reading
//	        }
//
//	    } catch (NoSuchElementException e) {
//	        // If the element is not found within the timeout
//	        System.out.println("Odometer input field is not found within 1 minute. Skipping this step.");
//	        // Optionally, log the exception for debugging purposes
//	    } catch (Exception e) {
//	        // Catch all other exceptions and skip the step if any error occurs
//	        System.out.println("An error occurred while trying to input the odometer reading. Skipping this step.");
//	        e.printStackTrace(); // Optionally, log the full stack trace for debugging
//	    }
//	}
//
//    public void clickSubmitInitialOdometerReading() {
//        try {
//            if (submitInitialOdometerReading.isDisplayed()) {
//                submitInitialOdometerReading.click();
//            }
//        } catch (Exception e) {
//            System.out.println("Submit button is not visible. Skipping this step.");
//            // Log the exception if necessary
//        }
//    }


	public void startedRoutesScreen() {
		clickOnStartedRoutes.click();
	}

	public void swipeUpToCompleteRoute() {
		Dimension size = driver.manage().window().getSize();

		// Start X and Y positions for the swipe
		int startX = size.getWidth() / 2; // Middle of the screen width
		int startY = (int) (size.getHeight() * 0.87); // 20% up from the bottom of the screen

		// End X and Y positions for the swipe
		int endX = startX; // Keep X the same (vertical swipe)
		int endY = 0; // Swipe to the top of the screen

		// Set up touch action using PointerInput
		PointerInput finger1 = new PointerInput(PointerInput.Kind.TOUCH, "finger1");

		Sequence sequence = new Sequence(finger1, 1)
				.addAction(finger1.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), startX, startY))
				.addAction(finger1.createPointerDown(PointerInput.MouseButton.LEFT.asArg()))
				.addAction(new Pause(finger1, Duration.ofMillis(200)))
				.addAction(
						finger1.createPointerMove(Duration.ofMillis(100), PointerInput.Origin.viewport(), endX, endY))
				.addAction(finger1.createPointerUp(PointerInput.MouseButton.LEFT.asArg()));

		// Perform the sequence
		driver.perform(Collections.singleton(sequence));
	}

	public void clickOnCompleteShipment() {
		clickOnCompleteShipment.click();

	}

	public void clickOnYesButton() {
		clickOnYesButton.click();

	}

	public void clickNextButtonOnFirstScreen() {
		WebElement clickOnNextButton = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("//android.widget.TextView[@text='Next']")));
		clickOnNextButton.click();

	}

	public void clickNextButtonOnSecondScreen() {
		WebElement clickOnNextButton2 = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("//android.widget.TextView[@text='Next']")));
		clickOnNextButton2.click();

	}

	public void addFirstFreightImage() {
		clickOnFirstFreightCamIcon.click();

	}

	public void clickToTakePicture() {
		clickToTakePicture.click();

	}

	public void clickToSavePicture() {
		clickToSavePicture.click();

	}

	public void saveCroppedImage() {
		saveCroppedPicture.click();

	}

	public void clickOnTakePodImageCamIcon() {
		clickOnTakePodImage.click();
	}

	public void clickToTakePodImage() {
		clickToTakeImage.click();
	}

	public void clickToSavePodImage() {
		savePodImage.click();
	}

	public void saveCroppedPodImage() {
		saveCroppedPodImage.click();
	}

	public void clickNextButtonOnThirdScreen() {
		WebElement clickOnNextButton3 = wait
				.until(ExpectedConditions.elementToBeClickable(By.xpath("//android.widget.TextView[@text='Next']")));
		clickOnNextButton3.click();

	}

	public void FirstName(String firstName) {
		typeFirstName.sendKeys(firstName);
	}

	public void clickOnSubmitButton() {
		clickOnSubmitButton.click();
	}
}
